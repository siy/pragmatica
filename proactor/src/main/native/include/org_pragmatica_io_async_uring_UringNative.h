/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_pragmatica_io_async_uring_UringNative */

#ifndef _Included_org_pragmatica_io_async_uring_UringNative
#define _Included_org_pragmatica_io_async_uring_UringNative
#ifdef __cplusplus
extern "C" {
#endif
#undef org_pragmatica_io_async_uring_UringNative_SIZE
#define org_pragmatica_io_async_uring_UringNative_SIZE 256LL
/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    init
 * Signature: (IJI)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_init
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_pragmatica_io_async_uring_UringNative_close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    peekCQ
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_peekCQ
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    advanceCQ
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_pragmatica_io_async_uring_UringNative_advanceCQ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    readyCQ
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_readyCQ
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    spaceLeft
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_pragmatica_io_async_uring_UringNative_spaceLeft
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    nextSQEntry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_pragmatica_io_async_uring_UringNative_nextSQEntry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    peekSQEntries
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_peekSQEntries
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    submitAndWait
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_pragmatica_io_async_uring_UringNative_submitAndWait
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    socket
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_socket
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     org_pragmatica_io_async_uring_UringNative
 * Method:    prepareForListen
 * Signature: (IJII)I
 */
JNIEXPORT jint JNICALL Java_org_pragmatica_io_async_uring_UringNative_prepareForListen
  (JNIEnv *, jclass, jint, jlong, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
